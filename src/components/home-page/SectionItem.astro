---
import { Image } from "astro:assets";

import ButtonArrow from "@components/buttons/ButtonArrow.astro";
import HandBallBall from "@components/HandballBall.astro";
// import handballBall from "assets/"

const { imageSrc, imageAlt, label, linkHref, backgroundColor } = Astro.props;

const isBlueColor = backgroundColor === "var(--clr-primary)";
console.log("isBlueColor", isBlueColor);
---

<article class="grid-item" style={`--background-color: ${backgroundColor};`}>
  <Image class="background-image" src={imageSrc} alt={imageAlt} />
  <div class="grid-content">
      <h3 style={`${isBlueColor && "--text-color: var(--clr-secondary)"}`}>
        {label}
      </h3>
    <div class="button-and-ball-container">
      <div class="grid-button">
        <ButtonArrow href={linkHref} isBlueArrow={isBlueColor} />
      </div>
      <div class="handball-ball">
        <HandBallBall isBlueColor={isBlueColor} />
      </div>
    </div>
  </div>
</article>

<!-- <article class="grid-item" style={`--background-color: ${backgroundColor};`}>
  <Image class="background-image" src={imageSrc} alt={imageAlt} />
  <div class="grid-content">
    <div class="handball-ball">
      <HandBallBall isBlueColor={isBlueColor} />
    </div>
    <header class="grid-title">
      <h3 style={`${isBlueColor && "--text-color: var(--clr-secondary)"}`}>
        {label}
      </h3>
    </header>
    <div class="grid-button">
      <ButtonArrow href={linkHref} isBlueArrow={isBlueColor} />
    </div>
  </div>
</article> -->

<style>
  .grid-item {
    aspect-ratio: 1 /1;
    position: relative;
    overflow: hidden;
  }

  .grid-content {
    position: absolute;
    background-color: transparent;
    bottom: 0;
    left: 0;
    width: 100%;
    /* height: 40%; */
    overflow: hidden;
    padding-block: 1.875rem;
    padding-inline: 1.5625rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: var(--background-color);
    gap: 1.25rem;
  }

  .background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  /* .grid-content::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    transform: rotate(0deg) scale(1);
 
  } */

  .button-and-ball-container {
    height: fit-content; 
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-block: auto;

  }

  h3 {
    font-size: 30px;
    font-weight: var(--fnt-wg-light);
    color: var(--text-color);
    text-wrap: balance;
    line-height: 1.1em;
  }

  .handball-ball {
    padding-top: 0.5rem;
/* background-color: red; */
  }


  @keyframes rebound {
    0% {
      transform: rotate(0deg) scale(2);
    }
    50% {
      transform: rotate(45deg) scale(0.85);
    }

    100% {
      transform: rotate(45deg) scale(1);
    }
  }
  /* .grid-item {
    aspect-ratio: 1 /1;
    position: relative;
    overflow: hidden;
  }

  .grid-content {
    position: absolute;
    background-color: transparent;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .grid-content::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--background-color);
    transform: rotate(0deg) scale(1);
  }

  .grid-item:hover .grid-content {
    opacity: 1;
  }

  .grid-item:hover .grid-content::before {
    animation: rebound 0.5s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }

  .grid-title {
    position: relative;
    height: 100%;
    width: 100%;
 display: grid;
 place-items: center;
  }

  h3 {
    font-size: clamp(1.044rem, -0.039rem + 2.817vi, 2.625rem);
    font-weight: var(--fnt-wg-light);
    color: var(--text-color);
    text-align: center;
    text-wrap: balance;
    padding-inline: 2em;
    line-height: 1.1em;
  }

  .handball-ball {
    position: absolute;
    top: 2em;
    left: 50%;
    transform: translateX(-50%);
  }
  .grid-button {
    position: absolute;
    bottom: 2em;
    left: 50%;
    transform: translateX(-50%);
  }

  @keyframes rebound {
    0% {
      transform: rotate(0deg) scale(2);
    }
    50% {
      transform: rotate(45deg) scale(0.85);
    }

    100% {
      transform: rotate(45deg) scale(1);
    }
  } */
</style>
