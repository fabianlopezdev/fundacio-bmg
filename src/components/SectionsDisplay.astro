---
import { Image } from "astro:assets";
import SectionItem from "@components/SectionItem.astro";
import maskImage from "@assets/Mask-group.avif";
import maskImage2 from "@assets/Mask-group-(1).webp";
import maskImage3 from "@assets/Mask-group-(2).webp";
import maskImage4 from "@assets/Mask-group-(3).avif";
import maskImage5 from "@assets/Mask-group-(4).avif";
import maskImage6 from "@assets/Mask-group-(5).avif";
import maskImage7 from "@assets/Mask-group-(6).webp";
import maskImage8 from "@assets/Mask-group-(7).webp";
import maskImage9 from "@assets/Mask-group-(8).avif";
import { SECTIONS } from "@data/SectionsData";
import ButtonArrow from "@components/ButtonArrow.astro";

// Define the color sequence
const colors = ["var(--clr-accent)", "var(--clr-secondary)", "var(--clr-primary)"];

// Function to calculate background color based on the index
function getBackgroundColor(index) {
  const cycle = Math.floor(index / 3); // Determine the cycle (group of 3 items)
  const positionInCycle = index % 3; // Position within the current cycle
  const startingColorIndex = cycle % 3; // Rotate the starting color after each cycle
  const colorIndex = (startingColorIndex + positionInCycle) % 3; // Adjust position
  return colors[colorIndex];
}
---

<section class="global-opposite-colors">
  <h2 class="global-light-bold">
    Descobreix <span class="global-bold">les nostres seccions</span>
  </h2>
  <div class="grid-container">
    {
      SECTIONS.map((section, index) => (
        <SectionItem
          imageSrc={section.imageSrc}
          imageAlt={section.imageSrc}
          label={section.label}
          linkHref={section.linkHref}
          backgroundColor={getBackgroundColor(index)}
        />
      ))
    }
  </div>
</section>

<style>
  section {
    --gap: 0.66875rem;
    --length: 31.520625rem;
  }

  h2 {
    font-size: var(--fnt-sz-m);
    text-align: center;
    padding-block: 7.8125rem;
  }

  .background-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    /* display: block; */
    /* z-index : -1; */
  }

  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, minmax(200px, 1fr));
    /* grid-template-rows: repeat(3, minmax(100px, var(--length))); */
    gap: var(--gap);
    padding-bottom: var(--gap);
    /* aspect-ratio: 3 / 3; */
  }
 
</style>
