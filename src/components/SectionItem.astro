---
import { Image } from "astro:assets";
import ButtonArrow from "@components/ButtonArrow.astro";

const { imageSrc, imageAlt, label, linkHref, backgroundColor} = Astro.props;

const isBlueColor = backgroundColor === "var(--clr-primary)";

---

<article class="grid-item" style={`--background-color: ${backgroundColor};`}>
  <Image class="background-image" src={imageSrc} alt={imageAlt} />
  <div class="grid-content">
    <header class="grid-title">
      <h3 style={`${isBlueColor && "--text-color: var(--clr-secondary)"}`}>{label}</h3>
    </header>
    <div class="grid-button">
      <ButtonArrow href={linkHref} isBlueArrow={isBlueColor}/>
    </div>
  </div>
</article>

<style>
  .grid-item {
    aspect-ratio: 1 /1;
    position: relative;
    /* background-color: var(--clr-primary); */
    overflow: hidden;
    /* border: 1px solid #ddd; */
    /* padding: 1rem; */
    /* font-size: 1.5rem; */
    /* text-align: center; */
  }

  .grid-content {
    position: absolute;
    background-color: transparent; 
    
    top: 0;
    left:0;/* Transparent to avoid overlap */
    width: 100%;
    height: 100%;
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }

  .grid-content::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Increase size to cover rotation edges */
    height: 100%;
    background-color: var(--background-color);
    transform: rotate(0deg) scale(1); /* Rotate the background */
    /* transform-origin: center; */
    /* z-index: 1;  */
  }

  .grid-item:hover .grid-content {
    opacity: 1; /* Ensures the content becomes visible on hover */
  }

  .grid-item:hover .grid-content::before {
    animation: spring 0.5s cubic-bezier(0.25, 1, 0.5, 1) forwards;
  }

  .grid-title {
    position: relative;
    height: 100%;
    width: 100%;
    display: grid;
    place-items: center;

    /* z-index: 1; */
  }

  h3 {
    font-size: clamp(1.044rem, -0.039rem + 2.817vi, 2.625rem);
    font-weight: var(--fnt-wg-light);
    color: var(--text-color);
    text-align: center;
    text-wrap: balance;
    padding-inline: 2em;
    line-height: 1.1em;
  }

  .grid-button {
    position: absolute;
    bottom: 2em;
    left: 50%;
    transform: translateX(-50%);
  }

  @keyframes spring {
    0% {
      transform: rotate(0deg) scale(2);
    }
    50% {
      transform: rotate(45deg) scale(0.85);
    }

    100% {
      transform: rotate(45deg) scale(1);
    }
  }
</style>
