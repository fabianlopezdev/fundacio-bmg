---
import "swiper/css";
import "swiper/css/effect-cards";

import { Image } from "astro:assets";

import LeftArrow from "@assets/arrows/Left-arrow.astro";
import RightArrow from "@assets/arrows/Right-arrow.astro";

const { imagesArr } = Astro.props;

---

<script>
  import Swiper from "swiper";
  import type { SwiperOptions } from "swiper/types";

  // Wait for the DOM to be ready before initializing
  document.addEventListener("DOMContentLoaded", () => {
    const initializeSwipers = () => {
      // Select all swiper containers
      const swiperContainers = document.querySelectorAll(".swiper");

      swiperContainers.forEach((container) => {
        // Destroy any existing Swiper instance
        const existingSwiper = (container as any).swiper;
        if (existingSwiper) existingSwiper.destroy(true, true);

        // Check screen size and apply appropriate configuration
   

        const swiperConfig = {
          slidesPerView: "auto",
          spaceBetween: 10, // Adjust spacing for smaller screens
          grabCursor: true,
          loop: true,
          centeredSlides: true,
          keyboard: true,
        };

        // Initialize Swiper for this specific container
        const swiperInstance = new Swiper(
          container as HTMLElement,
          swiperConfig as SwiperOptions
        );

        // Find navigation buttons specific to this Swiper
        const prevButton = container
          .closest(".swiper-container-wrapper")
          ?.querySelector(".swiper-prev");
        const nextButton = container
          .closest(".swiper-container-wrapper")
          ?.querySelector(".swiper-next");

        // Add event listeners to navigation buttons
        if (prevButton) {
          prevButton.addEventListener("click", () => {
            swiperInstance.slidePrev();
          });
        }

        if (nextButton) {
          nextButton.addEventListener("click", () => {
            swiperInstance.slideNext();
          });
        }
      });
    };

    // Initialize Swipers on load
    initializeSwipers();

    // Reinitialize Swipers on window resize
    window.addEventListener("resize", initializeSwipers);
  });
</script>


<div class="swiper-container-wrapper">
  <div class="swiper">
    <div class="swiper-wrapper">
      {
        [...imagesArr, ...imagesArr].map((image, index) => {
          const originalArrayLength = imagesArr.length * 2;
    
          const isEagerLoad = index < 2 || index === (originalArrayLength - 1) ;
          
          return (
            <div class="swiper-slide">
              <Image
                class="swiper-slide-image"
                src={image.img}
                alt={image.imgAlt}
                loading={isEagerLoad ? "eager" : "lazy"}
              />
            </div>
          );
        })
      }
    </div>

    <div class="swiper-controls">
      <button class="swiper-prev">
        <LeftArrow />
      </button>
      <button class="swiper-next">
        <RightArrow />
      </button>
    </div>
  </div>
</div>

<style>
  .swiper-container-wrapper {
    max-width: 100vw;
    padding-bottom: var(--space-y-page-section);
    background-color: var(--clr-secondary);
  }

  .swiper-slide {
    width: var(--slide-width);
    aspect-ratio: 593 / 343;
    height: 21.4375rem;
    overflow: hidden;
  }

  .swiper-controls {
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 1.75rem;
    padding-top: 2.75rem;
  }

  .swiper-slide-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: bottom;
  }

  @media (width < 710px) {
    .swiper-slide {
      width: 85vw;
      height: auto;
      aspect-ratio: 593 / 343;
    }

    .swiper-slide-image {
      width: 100%;
      height: 100%;
    }
  }
</style>
