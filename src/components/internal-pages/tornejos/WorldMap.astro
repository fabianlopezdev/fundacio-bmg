---
import { Image } from "astro:assets";
import fs from "fs";
import handballBall from "@assets/miscellaneous/handball-ball.svg";

import { continentInfoElements } from "@data/countriesData";

import path from "path";
import SpecialSectionHeading from "@components/internal-pages/SpecialSectionHeading.astro";

const rawSVG = fs.readFileSync(
  path.resolve("./src/assets/miscellaneous/world.svg"),
  "utf8",
);
---

<script src="/src/scripts/worldMapScript.ts"></script>

<div class="relative">
  <div class="map-instructions">
    <SpecialSectionHeading
      title="Descobreix els països que han participat a la Granollers Cup:"
      highlighted="sth"
    />
  </div>
  <div class="map-container" set:html={rawSVG} />

  {
    continentInfoElements.map(({ id, name, countriesCount, countriesList }) => (
      <>
        {/* Desktop hover info */}
        <article class="continent-info" data-continent={id}>
          <header>
            <h3>
              <span class="continent-name">{name}</span>
              <span class="countries-number">
                ({countriesCount} {countriesCount === 1 ? "país" : "països"})
              </span>
            </h3>
            <Image src={handballBall} alt="" />
          </header>
          <p>{countriesList}</p>
        </article>

        {/* Hidden overlay for mobile */}
        <div
          class="continent-overlay-data"
          data-continent={id}
          style="display:none;"
        >
          <header>
            <h3>
              <span class="continent-name">{name}</span>
              <span class="countries-number">
                ({countriesCount} {countriesCount === 1 ? "país" : "països"})
              </span>
            </h3>
            <button
              class="close-overlay-button"
              aria-label="Tanca la informació del continent"
            >
              X
            </button>
          </header>

          <div class="continent-overlay-map-wrapper">
            <svg
              class="continent-overlay-map"
              preserveAspectRatio="xMidYMid meet"
            />
            <p>{countriesList}</p>
          </div>
        </div>
      </>
    ))
  }

  <dialog class="continent-overlay"></dialog>
</div>

<style>
  .relative {
    position: relative;
    width: 100%;
    height: 100%;
    padding-top: 8.625rem;
    background-color: var(--clr-secondary);
  }

  .map-container {
    width: 100vw;
    max-width: var(--wd-max);
    padding-inline: var(--space-x-m);
    margin-inline: auto;
    position: relative;
    overflow: visible;
    cursor: pointer;
  }

  :global(.world-map path) {
    fill: rgba(197, 220, 255, 1);
    stroke: white;
    stroke-width: 0.5;
  }

  /* Highlight countries on hover (desktop) */
  @media (hover: hover) {
    :global(.map-container:has(g.europe:hover) path.europe.highlighted),
    :global(.map-container:has(g.asia:hover) path.asia.highlighted),
    :global(.map-container:has(g.africa:hover) path.africa.highlighted),
    :global(
        .map-container:has(g.north-america:hover) path.north-america.highlighted
      ),
    :global(
        .map-container:has(g.south-america:hover) path.south-america.highlighted
      ),
    :global(.map-container:has(g.oceania:hover) path.oceania.highlighted) {
      fill: var(--clr-primary);
    }
  }

  .continent-info {
    position: fixed;
    width: 408px;
    color: var(--clr-primary);
    border: 1px solid var(--clr-primary);
    border-radius: 0.8rem;
    font-weight: var(--fnt-wg-regular);
    background-color: white;
    z-index: 999;
    opacity: 0;
    transition: opacity 0.3s ease-out;
    pointer-events: none;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    left: 0;
    top: 0;
    transform: translate3d(0, 0, 0);
    will-change: transform;
  }

  .continent-info header {
    background-color: var(--clr-accent);
    padding-inline: 1.5rem;
    padding-block: 1rem;
    border-top-left-radius: 0.8rem;
    border-top-right-radius: 0.8rem;
    border-bottom: 1px solid var(--clr-primary);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .countries-number {
    font-size: var(--fnt-sz-sm);
  }

  .continent-info p {
    padding: 1.5rem;
  }

  /* Fullscreen overlay for mobile */
  .continent-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0);
    color: var(--clr-primary);
    display: flex;
    flex-direction: column;
    padding: 1rem;
    box-sizing: border-box;
    z-index: 1000;
    opacity: 0;
    pointer-events: none;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition:
      opacity 0.3s ease,
      background-color 0.3s ease;
  }

  .continent-overlay.active {
    opacity: 1;
    pointer-events: all;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .continent-overlay-data {
    background-color: var(--clr-secondary);
    color: var(--clr-primary);
    border: 1px solid var(--clr-primary);
    border-radius: 0.8rem;
    font-weight: var(--fnt-wg-regular);
    max-width: 408px;
    max-width: 408px;
    transform: scale(0.95);
    opacity: 0;
    transition:
      transform 0.3s ease,
      opacity 0.3s ease;
  }

  .continent-overlay.active .continent-overlay-data {
    transform: scale(1);
    opacity: 1;
  }

  .continent-overlay header {
    background-color: var(--clr-accent);
    padding-inline: 1.5rem;
    padding-block: 1rem;
    border-top-left-radius: 0.8rem;
    border-top-right-radius: 0.8rem;
    border-bottom: 1px solid var(--clr-primary);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .close-overlay-button {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
  }

  .continent-overlay-map-wrapper {
    padding-inline: 1.5rem;
    padding-block: 1rem;
  }

  .continent-overlay-map {
    width: 100%;
    height: auto;
    max-height: 162px;
  }

  :global(.continent-overlay-map:has(g.europe) path.europe.highlighted),
  :global(.continent-overlay-map:has(g.asia) path.asia.highlighted),
  :global(.continent-overlay-map:has(g.africa) path.africa.highlighted),
  :global(
      .continent-overlay-map:has(g.north-america) path.north-america.highlighted
    ),
  :global(
      .continent-overlay-map:has(g.south-america) path.south-america.highlighted
    ),
  :global(.continent-overlay-map:has(g.oceania) path.oceania.highlighted) {
    fill: var(--clr-primary);
  }
</style>
