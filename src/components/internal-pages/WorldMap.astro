---
import { JSDOM } from "jsdom";
import fs from "fs";

// Suppose you have a predefined list of countries that need a different fill color
const highlightedCountries = [
  "Argentina",
  "Australia",
  "Austria",
  "Belgium",
  "Bosnia",
  "Brazil",
  "Bulgaria",
  "Canada",
  "Chile",
  "China",
  "Colombia",
  "Croatia",
  "Czechia",
  "Denmark",
  "Egypt",
  "England",
  "Estonia",
  "Faroe Islands",
  "Finland",
  "France",
  "Georgia",
  "Germany",
  "Greece",
  "Guatemala",
  "Hungary",
  "Iceland",
  "India",
  "Israel",
  "Italy",
  "Kenya",
  "Latvia",
  "Lithuania",
  "Macedonia",
  "Mexico",
  "Moldova",
  "Morocco",
  "Nigeria",
  "Norway",
  "Poland",
  "Portugal",
  "Romania",
  "Russia",
  "Scotland",
  "Serbia",
  "Slovenia",
  "South Korea",
  "Spain",
  "Sweden",
  "Switzerland",
  "Taiwan",
  "Tunisia",
  "United States",
  "Uruguay",
  "Venezuela",
];

const africa = ["Egypt", "Kenya", "Morocco", "Nigeria", "Tunisia"];

const asia = ["China", "India", "Israel", "South Korea", "Taiwan"];

const europe = [
  "Austria",
  "Belgium",
  "Bosnia",
  "Bulgaria",
  "Croatia",
  "Czechia",
  "Denmark",
  "England",
  "Estonia",
  "Faroe Islands",
  "Finland",
  "France",
  "Georgia",
  "Germany",
  "Greece",
  "Hungary",
  "Iceland",
  "Italy",
  "Latvia",
  "Lithuania",
  "Macedonia",
  "Moldova",
  "Norway",
  "Poland",
  "Portugal",
  "Romania",
  "Russia",
  "Scotland",
  "Serbia",
  "Slovenia",
  "Spain",
  "Sweden",
  "Switzerland",
];


const northAmerica = ["Canada", "Guatemala", "Mexico", "United States"];

const southAmerica = [
  "Argentina",
  "Brazil",
  "Chile",
  "Colombia",
  "Uruguay",
  "Venezuela",
];

const oceania = ["Australia"];

const continentMap = {
  africa: new Set(africa),
  asia: new Set(asia),
  europe: new Set(europe),
  'north-america': new Set(northAmerica),
  'south-america': new Set(southAmerica),
  oceania: new Set(oceania)
};
const highlightColor = "rgba(197, 220, 255, 1)";

// Read the original SVG from a file
const svgPath = "./src/assets/world.svg";
const svgContent = fs.readFileSync(svgPath, "utf-8");

// Parse SVG using JSDOM
const dom = new JSDOM(svgContent);
const doc = dom.window.document;

// Loop through each highlighted country and set its fill attribute
highlightedCountries.forEach((countryTitle) => {
  const countryPath = doc.querySelector(`path[title="${countryTitle}"]`);
  if (!countryPath) return;

  // Add base highlight class
  countryPath.classList.add('highlighted');

  // Find which continent the country belongs to and add appropriate class
  Object.entries(continentMap).forEach(([continent, countries]) => {
    if (countries.has(countryTitle)) {
      countryPath.classList.add(continent);
    }
  });
});

// Convert back to string
const finalSVG = doc.documentElement.outerHTML;
---

<script>
  // Client-side script for interaction
  document.addEventListener("DOMContentLoaded", () => {
    const mapContainer = document.querySelector(".map-container");

    // Detect if the device is touch-enabled
    const isTouchableDevice =
      "ontouchstart" in window || navigator.maxTouchPoints > 0;

    console.log("isTouchableDevice", isTouchableDevice);
    if (mapContainer && isTouchableDevice) {
      // Find all highlighted paths
      const highlightedPaths = mapContainer.querySelectorAll(
        "path.highlighted",
      ) as NodeListOf<SVGPathElement>;

      let previouslySelected: SVGPathElement | null = null;

      // Add event listener to each highlighted path
      highlightedPaths.forEach((path) => {
        path.addEventListener("click", () => {
          // If the same country is clicked, toggle the fill
          if (previouslySelected === path) {
            path.style.fill = ""; // Reset to default color
            previouslySelected = null; // Clear the reference
          } else {
            // Reset the previously selected country's color
            if (previouslySelected) {
              previouslySelected.style.fill = ""; // Clear custom fill
            }

            // Set the new country's color
            path.style.fill = "var(--clr-accent)";
            path.style.stroke = "black";
            previouslySelected = path; // Update the reference
          }
        });
      });
    }
  });
</script>
<!-- Now render the final SVG as-is -->

  <div class="map-container" set:html={finalSVG} />


<style>
  /* div {
    width: 100%;
  } */

  div.map-container {
    width: 100vw;
    max-width: 1513px;
    padding-inline: var(--space-x-m);
    margin-inline: auto;
  }

  
</style>
