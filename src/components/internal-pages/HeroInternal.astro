---
import { Image } from "astro:assets";
import HeroNavigatorContainer from "@components/internal-pages/HeroNavigatorContainer.astro";

const { title, heroImage, sectionsLabels } = Astro.props;

// Split the title into words
const titleWords = title.split(" ");

// Calculate the total time needed for all words to appear
const lastWordTiming = (titleWords.length - 1) * 300;

const totalDelay = Math.max(1500, lastWordTiming + 200);

const objectPositionTop = title === "Palmarès del planter";
const objectPositionCenter = title === "La residència";
---

<script src="/src/scripts/heroInternalAnimationsScript.ts"></script>

<section id="hero" style={`--total-delay: ${totalDelay}ms`}>
  <div class="hero-text">
    <h1 class="h1-internal-page">
      {
        titleWords.map((word: string, index: number) => (
          <span 
            class="text" 
            style={`
              --delay: ${index * 300}ms; 
              visibility: hidden;
              opacity: 0;
            `}
            data-animate
          >
            {`${word}`}
          </span>
        ))
      }
    </h1>
  </div>

  {
    sectionsLabels?.length && (
      <HeroNavigatorContainer sectionsLabels={sectionsLabels} />
    )
  }

  {
    heroImage && (
      <Image
        loading="eager"
        class="hero-image"
        style={`object-position: ${objectPositionTop ? "top" : objectPositionCenter ? "center" : "bottom"}`}
        src={heroImage.heroImageSrc}
        alt={heroImage.heroImageAlt}
      />
    )
  }
</section>

<style>
  #hero {
    line-height: 0;
    scroll-margin-top: calc(var(--hg-header-sm) * 1rem);
  }

  .h1-internal-page {
    word-spacing: 1rem !important;
    color: var(--clr-accent);
    background-color: var(--clr-primary);
    font-weight: var(--fnt-wg-bold);
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .text {
    opacity: 0;
    visibility: hidden;
    transform: translateY(50%);
    display: inline-block;
    padding-right: 0.5rem;
    will-change: transform, opacity, visibility;
  }

  .text[data-animate] {
    visibility: visible;
  }

  .text.animated {
    animation: animate-lines 0.6s var(--delay, 0ms)
      cubic-bezier(0, 0, 0.58, 1.2) forwards;
  }

  @keyframes animate-lines {
    0% {
      opacity: 0;
      visibility: visible;
      transform: translateY(50%);
    }
    1% {
      opacity: 1;
      visibility: visible;
    }
    100% {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }
  }

  .hero-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: bottom;
    aspect-ratio: 1512 / 751;
  }

  .hero-text {
    height: 100dvh;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    animation: all-height 0.6s var(--total-delay) ease-in-out forwards;
    background-color: var(--clr-primary);
    margin-top: calc(var(--hg-header) * -1rem);
  }

  @keyframes all-height {
    100% {
      margin-top: 0rem;
      height: auto;
      height: calc-size(auto);
    }
  }

  @media (width < 800px) {
    .hero-text {
      margin-top: calc(var(--hg-header-sm) * -1rem);
    }

    .text {
      padding-right: 0.2rem;
    }

    .text:last-child {
      padding-right: 0;
    }
  }

  @media (width < 769px) {
    .h1-internal-page {
      gap: 0.25rem;
    }
  }
</style>